{
  "name": "Code Organization Standards",
  "description": "Rules for organizing project structure, files, imports, and components",
  "rules": [
    {
      "id": "project-structure",
      "name": "Project Structure",
      "description": "Follow consistent project structure patterns",
      "guidelines": [
        "Follow the Django project structure for backend code",
        "Organize frontend Next.js code using the App Router structure",
        "Keep shared utilities in dedicated folders by functionality",
        "Maintain consistent naming conventions across the codebase"
      ],
      "severity": "error"
    },
    {
      "id": "file-naming",
      "name": "File Naming Conventions",
      "description": "Use consistent file naming patterns",
      "guidelines": [
        "Use snake_case for Python files",
        "Use PascalCase for React components",
        "Use camelCase for JavaScript/TypeScript utility files",
        "Include type information in TypeScript filenames where appropriate (e.g., `UserTypes.ts`)"
      ],
      "severity": "warning"
    },
    {
      "id": "import-order",
      "name": "Import Order",
      "description": "Organize imports in a consistent manner",
      "guidelines": [
        "Standard library imports first",
        "Third-party library imports second",
        "Local application imports third",
        "Separate import groups with a blank line",
        "Sort imports alphabetically within each group"
      ],
      "severity": "warning",
      "configuration": {
        "groupPriority": ["standard", "third-party", "local"]
      }
    },
    {
      "id": "component-organization",
      "name": "Component Organization",
      "description": "Structure React components consistently",
      "guidelines": [
        "Organize React components using atomic design principles",
        "Keep component files under 300 lines of code",
        "Extract complex logic into custom hooks",
        "Co-locate component tests with component files"
      ],
      "severity": "warning",
      "configuration": {
        "maxLines": 300
      }
    }
  ]
} 