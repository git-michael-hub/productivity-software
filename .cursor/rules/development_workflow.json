{
  "name": "Development Workflow",
  "description": "Rules for Git workflow, code reviews, and environment management",
  "rules": [
    {
      "id": "git-workflow",
      "name": "Git Workflow",
      "description": "Standards for source control management",
      "guidelines": [
        "Use feature branches for all new development",
        "Name branches using the pattern: `feature/`, `bugfix/`, `hotfix/`, `release/`",
        "Require pull request reviews before merging",
        "Squash commits when merging to main branch",
        "Write descriptive commit messages with issue references"
      ],
      "severity": "warning",
      "configuration": {
        "branchPrefixes": ["feature/", "bugfix/", "hotfix/", "release/"],
        "requireReviews": true,
        "squashMerges": true
      }
    },
    {
      "id": "code-reviews",
      "name": "Code Review Process",
      "description": "Standards for reviewing code changes",
      "guidelines": [
        "All code must be reviewed by at least one other developer",
        "Reviewers should check for adherence to standards and best practices",
        "Address all review comments before merging",
        "Use Cursor's collaborative features for real-time code reviews"
      ],
      "severity": "error",
      "configuration": {
        "minReviewers": 1
      }
    },
    {
      "id": "environment-management",
      "name": "Environment Management",
      "description": "Standards for managing development environments",
      "guidelines": [
        "Use .env files for environment-specific configuration",
        "Never commit sensitive information to version control",
        "Document all environment variables in a template file",
        "Use different environment configurations for development, testing, and production"
      ],
      "severity": "error",
      "configuration": {
        "requiredEnvironments": ["development", "testing", "production"],
        "templateFile": ".env.example"
      }
    }
  ]
} 