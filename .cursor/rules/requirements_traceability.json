{
  "name": "Requirements Traceability",
  "description": "Rules to ensure code is aligned with formal requirements documentation",
  "rules": [
    {
      "id": "requirement-reference",
      "name": "Requirement Reference",
      "description": "Code must include references to the requirements it implements",
      "guidelines": [
        "Include requirement ID/reference in code comments using '@requirement' tag",
        "Link code to specific sections in requirements documents",
        "Document deviation from requirements with justification",
        "Update requirement references when code functionality changes",
        "Flag orphaned code that doesn't map to any requirement"
      ],
      "severity": "error",
      "configuration": {
        "requirementTagPattern": "@requirement\\s+[\\w-]+",
        "allowedDeviationTag": "@requirement-deviation",
        "detectOrphanedCode": true
      }
    },
    {
      "id": "requirements-verification",
      "name": "Requirements Verification",
      "description": "Tests must verify requirements are correctly implemented",
      "guidelines": [
        "Tests should specifically reference requirements they verify",
        "Each functional requirement needs corresponding test(s)",
        "Test descriptions should reflect requirement language",
        "Use requirement-based test naming conventions",
        "Document requirements coverage in test documentation"
      ],
      "severity": "error",
      "configuration": {
        "requireVerificationComment": true,
        "testNamingPattern": "test_REQ_[\\w-]+|test[A-Z][\\w]+_REQ_[\\w-]+"
      }
    },
    {
      "id": "requirements-based-commits",
      "name": "Requirements-Based Commits",
      "description": "Commit messages should reference requirements",
      "guidelines": [
        "Include requirement ID in commit message",
        "Use format: '[REQ-XXX] Commit message'",
        "Reference multiple requirements as needed: '[REQ-XXX][REQ-YYY]'",
        "Describe how the commit fulfills the requirement",
        "Link to requirement document when applicable"
      ],
      "severity": "warning",
      "configuration": {
        "commitMessagePattern": "\\[REQ-[\\w-]+\\]",
        "enforceRequirementInTitle": true
      }
    },
    {
      "id": "implementation-alignment",
      "name": "Implementation Alignment",
      "description": "Code implementation must align with requirement specifications",
      "guidelines": [
        "Honor API contracts specified in requirements",
        "Maintain data models as defined in requirements",
        "Use specified algorithms and patterns",
        "Implement exact business logic as documented",
        "Follow architecture models from requirements"
      ],
      "severity": "error",
      "configuration": {
        "validateContractAlignment": true,
        "enforceDataModels": true,
        "enforceTechnologyStack": true
      }
    },
    {
      "id": "requirements-change-impact",
      "name": "Requirements Change Impact",
      "description": "Track impact of requirement changes on code",
      "guidelines": [
        "Document affected code when requirements change",
        "Update code comments with requirement version references",
        "Add '@requirement-update' tag for changed requirements",
        "Track version of requirements used for implementation",
        "Include change notes for requirement-driven updates"
      ],
      "severity": "warning",
      "configuration": {
        "requirementVersionTag": "@requirement-version\\s+[\\w\\.-]+",
        "requirementUpdateTag": "@requirement-update"
      }
    }
  ]
} 